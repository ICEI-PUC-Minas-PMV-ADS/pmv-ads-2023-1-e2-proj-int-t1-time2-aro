// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using permita_se.Data;

namespace permita_se.Migrations
{
    [DbContext(typeof(PermitaSeDbContext))]
    partial class PermitaSeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("permita_se.Model.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("permita_se.Model.Favorito", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("id_produto");

                    b.HasKey("IdUsuario", "IdProduto")
                        .HasName("PK__favorito__D59D8EC601C60CFF");

                    b.HasIndex("IdProduto");

                    b.ToTable("favoritos");
                });

            modelBuilder.Entity("permita_se.Model.OpcaoResposta", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdPergunta")
                        .HasColumnType("int")
                        .HasColumnName("id_pergunta");

                    b.Property<string>("Texto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("texto");

                    b.HasKey("Id");

                    b.HasIndex("IdPergunta");

                    b.ToTable("opcao_resposta");
                });

            modelBuilder.Entity("permita_se.Model.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Texto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("texto");

                    b.HasKey("Id");

                    b.ToTable("pergunta");
                });

            modelBuilder.Entity("permita_se.Model.PerguntaQuestionario", b =>
                {
                    b.Property<int>("IdQuestionario")
                        .HasColumnType("int")
                        .HasColumnName("id_questionario");

                    b.Property<int>("IdPergunta")
                        .HasColumnType("int")
                        .HasColumnName("id_pergunta");

                    b.HasKey("IdQuestionario", "IdPergunta")
                        .HasName("PK__pergunta__DC4D1DA718F174D8");

                    b.HasIndex("IdPergunta");

                    b.ToTable("pergunta_questionario");
                });

            modelBuilder.Entity("permita_se.Model.Produto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imagem_url");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("produto");
                });

            modelBuilder.Entity("permita_se.Model.Questionario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("Id");

                    b.ToTable("questionario");
                });

            modelBuilder.Entity("permita_se.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<bool?>("Gerente")
                        .HasColumnType("bit")
                        .HasColumnName("gerente");

                    b.Property<int?>("Idade")
                        .HasColumnType("int")
                        .HasColumnName("idade");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("senha");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("permita_se.Model.Favorito", b =>
                {
                    b.HasOne("permita_se.Model.Produto", "IdProdutoNavigation")
                        .WithMany("Favoritos")
                        .HasForeignKey("IdProduto")
                        .HasConstraintName("FK__favoritos__id_pr__6477ECF3")
                        .IsRequired();

                    b.HasOne("permita_se.Model.Usuario", "IdUsuarioNavigation")
                        .WithMany("Favoritos")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__favoritos__id_us__6383C8BA")
                        .IsRequired();

                    b.Navigation("IdProdutoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("permita_se.Model.OpcaoResposta", b =>
                {
                    b.HasOne("permita_se.Model.Pergunta", "IdPerguntaNavigation")
                        .WithMany("OpcaoResposta")
                        .HasForeignKey("IdPergunta")
                        .HasConstraintName("FK__opcao_res__id_pe__6EF57B66")
                        .IsRequired();

                    b.Navigation("IdPerguntaNavigation");
                });

            modelBuilder.Entity("permita_se.Model.PerguntaQuestionario", b =>
                {
                    b.HasOne("permita_se.Model.Pergunta", "IdPerguntaNavigation")
                        .WithMany("PerguntaQuestionarios")
                        .HasForeignKey("IdPergunta")
                        .HasConstraintName("FK__pergunta___id_pe__6C190EBB")
                        .IsRequired();

                    b.HasOne("permita_se.Model.Questionario", "IdQuestionarioNavigation")
                        .WithMany("PerguntaQuestionarios")
                        .HasForeignKey("IdQuestionario")
                        .HasConstraintName("FK__pergunta___id_qu__6B24EA82")
                        .IsRequired();

                    b.Navigation("IdPerguntaNavigation");

                    b.Navigation("IdQuestionarioNavigation");
                });

            modelBuilder.Entity("permita_se.Model.Produto", b =>
                {
                    b.HasOne("permita_se.Model.Categoria", "IdCategoriaNavigation")
                        .WithMany("Produtos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__produto__id_cate__60A75C0F")
                        .IsRequired();

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("permita_se.Model.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("permita_se.Model.Pergunta", b =>
                {
                    b.Navigation("OpcaoResposta");

                    b.Navigation("PerguntaQuestionarios");
                });

            modelBuilder.Entity("permita_se.Model.Produto", b =>
                {
                    b.Navigation("Favoritos");
                });

            modelBuilder.Entity("permita_se.Model.Questionario", b =>
                {
                    b.Navigation("PerguntaQuestionarios");
                });

            modelBuilder.Entity("permita_se.Model.Usuario", b =>
                {
                    b.Navigation("Favoritos");
                });
#pragma warning restore 612, 618
        }
    }
}
